● webpack의 css-loader를 이용하여 일반 CSS를 불러오는 방식
● CSS 전처리기를 사용하는 방식

● 리액트 프로젝트에서 스타일링을 할 때 자주 사용하는 방법
  * CSS Module
  * Sass : 확장된 CSS문법
  * styled-components: 요즘 인기있는 스타일링 방식, JS코드내부에서 스타일을 정의

● create-react-app v2부터는 Sass와 CSS Module을 yarn eject 하지 않고 사용 할 수 있습니다.

● CSS Module
  * CSS를 모듈화하여 사용하는 방식
  * CSS 클래스를 만들면 자동으로 고유한 클래스네임을 생성하여 스코프를 지역적으로 제한하는 방식
  * v2부터는 css파일을 생성할 때 파일이름.module.css 이런식으로 하시면 CSS Module이 적용됩니다.

  [사용법 1: 클래스가 한 개일 때]
    import styles from './App.ch9.1.module.css';
    <div className={styles.box}></div>

  [사용법 2: 클래스가 여러 개일 때]
    import styles from './App.ch9.2.module.css';
    <div className={[styles.box, styles.blue].join(' ')}></div>

  [사용법 3: 클래스가 여러 개일 때]
    $ yarn add classnames  // classnames 라이브러러 설치 후

    import classNames from 'classnames';
    import styles from './App.ch9.2.module.css';
    <div className={classNames(styles.box, styles.blue)}></div>

  [사용법 4: 클래스가 여러 개일 때]
    import classNames from 'classnames/bind';
    const cx = classNames.bind(styles);
    <div className={cx('box', 'blue')}></div>

  [사용법 5: 조건부 스타일링]
  : 객체 형식으로 사용하면 조건부 스타일링을 할 때 매우 편리합니다.
  
    import classNames from 'classnames/bind';
    const cx = classNames.bind(styles);
    const isBlue = true;
    <div className={cx('box', {
        blue: isBlue
      })}>
    </div>