● styled-components의 장점
  * 자바스크립트 내부에서 스타일을 정의하기 때문에,
    자바스크립트와 스타일 사이의 벽이 허물어져서, 동적 스타일링이 더욱 편해진다.
  * 한 파일에서 스타일과 자바스크립트 코드를 모두 관리할 수 있다.

● styled-components의 단점
  기존 CSS파일을 사용한 스타일링과 사뭇 다른 흐름으로 관리한다는 단점 때문에,
  협업할 때 HTML/CSS를 작성하는 디자이너가 따로 있다면 일일이 포팅해야 하기에 조금 힘들 수도 있다.

● 이제 big이라는 props를 사용하여 버튼 크기를 동적으로 변경하는 코드를 작성하겠습니다.
  [src/styled-components/StyledButton.js]
  import React from 'react';
  import styled from 'styled-components';

  const Wrapper = styled.div`
    border: 1px solid black;
    display: inline-block;
    padding: 1rem;
    border-radius: 3px;
    font-size: ${props => props.fontSize};
    ${props => props.big && `
      font-size: 2rem;
      padding: 2rem;
    `}
    &:hover {
      background: black;
      color: white;
    }
  `;

  const StyledButton = ({children, big, ...rest}) => {
    return (
      <div>
        <Wrapper fontSize="1.25rem" {...rest} big={big}>
          {children}
        </Wrapper>
      </div>
    );
  };

  export default StyledButton;

  [src/styled-components/App.js]
  ...
  class App extends Component {
    render() {
      return (
        <div>
          <StyledButton big>버튼</StyledButton>
        </div>
      );
    }
  }
  ...

  => 여기에서 big={true} 이렇게 값을 따로 설정하지 않고 big이라고만 작성했는데요.
     의미는 big={true}와 동일합니다.

● styled-components의 다른 기능들
  * Sass처럼 nested 구조로 작성 가능
  * 현재 선택자 참조(&)

  참고 사이트 : https://www.styled-components.com/