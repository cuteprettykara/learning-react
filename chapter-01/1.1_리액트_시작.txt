리액트는 오직 View만 신경 쓰는 라이브러리입니다.

[초기 렌더링]
render() { ... } 함수가 담당.

* 이 함수는 컴포넌트가 어떻게 생겼는지 정의하는 역할을 담당.
* 이 함수는 html 형식의 문자열을 반환하지 않고, 뷰가 어떻게 생겼고, 어떻게 작동되는지의 정보를 지닌 객체를 반환

내부에 있는 컴포넌트들도 재귀적으로 렌더링합니다.
최상위 컴포넌트의 렌더링 작업이 끝나면, 지니고 있는 정보들을 사용하여 HTML 마크업을 만들고,
이를 DOM 요소 안에 주입합니다.



[조화 과정]
이 작업 또한 render() { ... } 함수가 담당.

리액트에서 뷰를 업데이트 할 때는 "조화 과정(reconciliation)을 거친다"라고 표현한다.
컴포넌트는 데이터를 업데이트했을 때, 새로운 데이터를 가지고 render() 함수를 또 다시 호출합니다.
그러면 그 데이터를 지닌 뷰를 생성해 내겠죠?
이때, render() 함수가 반환하는 결과를 곧바로 DOM에 반영하지 않고,
이전에 render() 함수가 만들었던 컴포넌트 정보와 현재 render() 함수가 만든 컴포넌트 정보를 비교합니다.

자바스크립트를 사용하여 두 가지 뷰를 [최소한의 연산]으로 비교한 후,
둘의 차이를 알아내 DOM 트리를 업데이트 합니다.