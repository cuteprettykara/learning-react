DOM에는 치명적인 문제점이 있습니다. => 동적 UI에 최적화되어 있지 않습니다.
HTML 자체는 정적입니다. 자바스크립트를 사용하여 동적으로 만들 수 있지요.

하지만 규모가 큰 웹 애플리케이션에서 DOM에 직접 접근하여 변화를 주다 보면 성능 이슈가 발생하기 시작합니다.

DOM 자체는 빠릅니다. 단, 웹 브라우저가 

* CSS를 다시 연산하고,
* 레이아웃을 구성하고,
* 페이지를 리페인트

하는 과정에서 시간이 허비되는 것입니다.

[해결책]
* Virtual DOM을 사용하여
* DOM 업데이트를 추상화함으로써
* DOM 처리 횟수를 최소화

[Virtual DOM]
실제 DOM에 접근하여 조작하는 대신, 이를 추상화한 자바스크립트 객체를 구성하여 사용한다.
실제 DOM의 [가벼운 사본]과 비슷.

리액트에서 데이터가 변하여 웹 브라우저에서 실제 DOM을 업데이트할 때는 다음 세 가지 절차를 밟습니다.
1. 전체 UI를 Virtual DOM에 리렌더링합니다.
2. 이전 Virtual DOM에 있던 내용과 현재 내용을 비교합니다.
3. 바뀐 부분만 실제 DOM에 적용합니다.