앞서 만들어 놓았던 백엔ㄷ API를 조금 수정하여 tag값도 분류할 수 있도록 설정하겠습니다.
백엔드 프로젝트의 posts.ctrl.js 파일을 다음과 같이 수정하세요.

[src/api/posts/posts.ctrl.js]
...
exports.list = async ctx => {
  const page = parseInt(ctx.query.page || 1, 10);
  const { tag } = ctx.query;

  const query = tag
    ? { tags: tag } // tags 배열에 tag를 가진 포스트 찾기
    : {};

  // 잘못된 페이지가 주어졌다면 오류
  if (page < 1) {
    ctx.status = 400;
    return;
  }

  try {
    const posts = await Post.find(query)
      .sort({_id: -1})
      .limit(10)
      .skip((page - 1) * 10)
      .lean()
      .exec();
    const postCount = await Post.countDocuments(query).exec();
    ...
  } catch (e) {
    ctx.throw(e, 500);
  }
};

URL 쿼리 중 tag 존재 유무에 따라 find 함수에 넣을 파라미터를 다르게 설정했습니다.
무조건 {tags: tag}를 넣지 않고 tag가 비어 있을 때 빈 객체 {}를 전달한 것은,
tag가 없다면 find 함수에 {tags: undefined}를 전달하면서 아무 데이터도 나타나지 않는 이슈가 발생하기 때문입니다.

이제 태그가 있는 포스트에서 태그 링크를 눌러 보세요. 분류가 잘 되었나요?